name: Reuse â€¢ Build & Test
on:
  workflow_call:
    inputs:
      language: { type: string, required: true, description: "node|python|java" }
      run-tests: { type: boolean, default: true }
      cache-key: { type: string, default: "" }
    secrets:
      token: { required: false, description: "Optional PAT for private registries" }

jobs:
  build:
    name: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Toolchains
      - name: Setup Node
        if: ${{ inputs.language == 'node' }}
        uses: actions/setup-node@v4
        with: { node-version: '20' }

      - name: Setup Python
        if: ${{ inputs.language == 'python' }}
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Setup Java
        if: ${{ inputs.language == 'java' }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # Cache
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.cache/pip
            ~/.m2/repository
          key: ${{ runner.os }}-${{ inputs.language }}-${{ hashFiles('**/package-lock.json','**/pnpm-lock.yaml','**/requirements*.txt','**/poetry.lock','**/pom.xml') }}-${{ inputs.cache-key }}

      # Install
      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          case "${{ inputs.language }}" in
            node)
              if [ -f package-lock.json ]; then npm ci --no-audit --no-fund; else npm i --package-lock-only && npm ci; fi
              ;;
            python)
              pip install -r requirements.txt || true
              ;;
            java)
              mvn -q -DskipTests install
              ;;
          esac

      # Lint + Unit
      - name: Lint & Test (language-aware; Make fallback)
        if: ${{ inputs.run-tests }}
        shell: bash
        run: |
          set -euo pipefail
          make check || true
          if [ "${{ inputs.language }}" = "node" ]; then npm test --if-present || true; fi
          if [ "${{ inputs.language }}" = "python" ]; then pytest -q || true; fi
          if [ "${{ inputs.language }}" = "java" ]; then mvn -q -DskipITs=false test || true; fi

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: "**/coverage*/**/*"
          if-no-files-found: ignore
